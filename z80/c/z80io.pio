
.program z80io
.side_set 1
.wrap_target
nop side 0 [4]           ;wait for bouncing
wait 0 GPIO 12 side 0 [2] ;handle "bounce"
in PINS,12 side 0
push block side 1
exit:
nop side 1
wait 1 GPIO 12 side 1 [2] ;handle bounce
nop side 1 [3]
.wrap

%c-sdk {
static inline void z80io_init(PIO pio, uint sm, uint offset, float freq) {
	pio_sm_config c = z80io_program_get_default_config(offset);
	for (int i=0;i<10;i++) pio_gpio_init(pio, 13+i);
	pio_gpio_init(pio, 26);
	pio_sm_set_consecutive_pindirs(pio, sm, 13, 10, false);
	sm_config_set_out_pins(&c, 13, 8);
	sm_config_set_clkdiv(&c, freq);
	sm_config_set_out_shift(&c, true, true, 8);
	sm_config_set_in_shift(&c, false, true, 32);
	sm_config_set_sideset_pins(&c, 10);
	sm_config_set_sideset(&c, 1, false, false);
	sm_config_set_in_pins(&c, 13);
	sm_config_set_jmp_pin(&c, 11);
	pio_sm_init(pio, sm, offset, &c);
}
%}
